"""
Demonstra√ß√£o do Metacognitive Entropy Adaptor (MEA)
Explora√ß√£o das din√¢micas de auto-organiza√ß√£o qu√¢ntica
"""

import sys
sys.path.append('/Users/infrastructure/Documents/GitHub/QuantumConsciousness')

from qualia.quantum.quantum_nexus import QuantumNexus
import matplotlib.pyplot as plt

def main():
    # Inicializa QuantumNexus
    nexus = QuantumNexus(dimensoes=1024)
    
    # Executa evolu√ß√£o holon√¥mica
    historico_estados, historico_metricas, historico_adaptacoes = nexus.evolucao_holonomica(ciclos=50)
    
    # Visualiza manifesta√ß√£o
    nexus.visualizar_manifestacao(historico_estados, historico_metricas, historico_adaptacoes)
    
    # Imprime sum√°rio adaptativo
    sumario = nexus.resumo_adaptativo()
    print("\nüî¨ Sum√°rio de Adapta√ß√µes Metacognitivas üî¨")
    print(f"Total de Adapta√ß√µes: {sumario['total_adaptations']}")
    print("\nDistribui√ß√£o de Estrat√©gias:")
    for estrategia, propor√ß√£o in sumario['strategy_distribution'].items():
        print(f"  {estrategia}: {propor√ß√£o * 100:.2f}%")
    
    print("\nEstat√≠sticas de Entropia:")
    for metrica, valor in sumario['entropy_stats'].items():
        print(f"  {metrica.capitalize()}: {valor:.4f}")

if __name__ == '__main__':
    main()
